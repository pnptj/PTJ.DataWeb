#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PTJ_Operational_Db")]
public partial class dbDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertAdress(Adress instance);
  partial void UpdateAdress(Adress instance);
  partial void DeleteAdress(Adress instance);
  partial void InsertPerson_Sjuk_Hälsovårds_Personal(Person_Sjuk_Hälsovårds_Personal instance);
  partial void UpdatePerson_Sjuk_Hälsovårds_Personal(Person_Sjuk_Hälsovårds_Personal instance);
  partial void DeletePerson_Sjuk_Hälsovårds_Personal(Person_Sjuk_Hälsovårds_Personal instance);
  partial void InsertAdressTyp(AdressTyp instance);
  partial void UpdateAdressTyp(AdressTyp instance);
  partial void DeleteAdressTyp(AdressTyp instance);
  partial void InsertAdressVariant(AdressVariant instance);
  partial void UpdateAdressVariant(AdressVariant instance);
  partial void DeleteAdressVariant(AdressVariant instance);
  partial void InsertGatuAdress(GatuAdress instance);
  partial void UpdateGatuAdress(GatuAdress instance);
  partial void DeleteGatuAdress(GatuAdress instance);
  partial void InsertMail(Mail instance);
  partial void UpdateMail(Mail instance);
  partial void DeleteMail(Mail instance);
  partial void InsertOrganisation_Adress(Organisation_Adress instance);
  partial void UpdateOrganisation_Adress(Organisation_Adress instance);
  partial void DeleteOrganisation_Adress(Organisation_Adress instance);
  partial void InsertPerson_Adress(Person_Adress instance);
  partial void UpdatePerson_Adress(Person_Adress instance);
  partial void DeletePerson_Adress(Person_Adress instance);
  partial void InsertTelefon(Telefon instance);
  partial void UpdateTelefon(Telefon instance);
  partial void DeleteTelefon(Telefon instance);
  partial void InsertOrganisation(Organisation instance);
  partial void UpdateOrganisation(Organisation instance);
  partial void DeleteOrganisation(Organisation instance);
  partial void InsertPerson(Person instance);
  partial void UpdatePerson(Person instance);
  partial void DeletePerson(Person instance);
  partial void InsertPerson_AnnanPerson(Person_AnnanPerson instance);
  partial void UpdatePerson_AnnanPerson(Person_AnnanPerson instance);
  partial void DeletePerson_AnnanPerson(Person_AnnanPerson instance);
  partial void InsertPerson_Anställd(Person_Anställd instance);
  partial void UpdatePerson_Anställd(Person_Anställd instance);
  partial void DeletePerson_Anställd(Person_Anställd instance);
  partial void InsertPerson_Konsult(Person_Konsult instance);
  partial void UpdatePerson_Konsult(Person_Konsult instance);
  partial void DeletePerson_Konsult(Person_Konsult instance);
  partial void InsertPerson_Patient(Person_Patient instance);
  partial void UpdatePerson_Patient(Person_Patient instance);
  partial void DeletePerson_Patient(Person_Patient instance);
  #endregion
	
	public dbDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PTJ_Operational_DbConnectionString1"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public dbDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public dbDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public dbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public dbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Adress> Adresses
	{
		get
		{
			return this.GetTable<Adress>();
		}
	}
	
	public System.Data.Linq.Table<Person_Sjuk_Hälsovårds_Personal> Person_Sjuk_Hälsovårds_Personals
	{
		get
		{
			return this.GetTable<Person_Sjuk_Hälsovårds_Personal>();
		}
	}
	
	public System.Data.Linq.Table<AdressTyp> AdressTyps
	{
		get
		{
			return this.GetTable<AdressTyp>();
		}
	}
	
	public System.Data.Linq.Table<AdressVariant> AdressVariants
	{
		get
		{
			return this.GetTable<AdressVariant>();
		}
	}
	
	public System.Data.Linq.Table<GatuAdress> GatuAdresses
	{
		get
		{
			return this.GetTable<GatuAdress>();
		}
	}
	
	public System.Data.Linq.Table<Mail> Mails
	{
		get
		{
			return this.GetTable<Mail>();
		}
	}
	
	public System.Data.Linq.Table<Organisation_Adress> Organisation_Adresses
	{
		get
		{
			return this.GetTable<Organisation_Adress>();
		}
	}
	
	public System.Data.Linq.Table<Person_Adress> Person_Adresses
	{
		get
		{
			return this.GetTable<Person_Adress>();
		}
	}
	
	public System.Data.Linq.Table<Telefon> Telefons
	{
		get
		{
			return this.GetTable<Telefon>();
		}
	}
	
	public System.Data.Linq.Table<Organisation> Organisations
	{
		get
		{
			return this.GetTable<Organisation>();
		}
	}
	
	public System.Data.Linq.Table<Person> Persons
	{
		get
		{
			return this.GetTable<Person>();
		}
	}
	
	public System.Data.Linq.Table<Person_AnnanPerson> Person_AnnanPersons
	{
		get
		{
			return this.GetTable<Person_AnnanPerson>();
		}
	}
	
	public System.Data.Linq.Table<Person_Anställd> Person_Anställds
	{
		get
		{
			return this.GetTable<Person_Anställd>();
		}
	}
	
	public System.Data.Linq.Table<Person_Konsult> Person_Konsults
	{
		get
		{
			return this.GetTable<Person_Konsult>();
		}
	}
	
	public System.Data.Linq.Table<Person_Patient> Person_Patients
	{
		get
		{
			return this.GetTable<Person_Patient>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="Adress.Adress")]
public partial class Adress : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _AdressTyp_FKID;
	
	private int _AdressVariant_FKID;
	
	private System.DateTime _SkapadDatum;
	
	private System.Nullable<System.DateTime> _UpdateradDatum;
	
	private string _UpdateradAv;
	
	private EntitySet<GatuAdress> _GatuAdresses;
	
	private EntitySet<Mail> _Mails;
	
	private EntitySet<Organisation_Adress> _Organisation_Adresses;
	
	private EntitySet<Person_Adress> _Person_Adresses;
	
	private EntitySet<Telefon> _Telefons;
	
	private EntityRef<AdressTyp> _AdressTyp;
	
	private EntityRef<AdressVariant> _AdressVariant;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAdressTyp_FKIDChanging(int value);
    partial void OnAdressTyp_FKIDChanged();
    partial void OnAdressVariant_FKIDChanging(int value);
    partial void OnAdressVariant_FKIDChanged();
    partial void OnSkapadDatumChanging(System.DateTime value);
    partial void OnSkapadDatumChanged();
    partial void OnUpdateradDatumChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateradDatumChanged();
    partial void OnUpdateradAvChanging(string value);
    partial void OnUpdateradAvChanged();
    #endregion
	
	public Adress()
	{
		this._GatuAdresses = new EntitySet<GatuAdress>(new Action<GatuAdress>(this.attach_GatuAdresses), new Action<GatuAdress>(this.detach_GatuAdresses));
		this._Mails = new EntitySet<Mail>(new Action<Mail>(this.attach_Mails), new Action<Mail>(this.detach_Mails));
		this._Organisation_Adresses = new EntitySet<Organisation_Adress>(new Action<Organisation_Adress>(this.attach_Organisation_Adresses), new Action<Organisation_Adress>(this.detach_Organisation_Adresses));
		this._Person_Adresses = new EntitySet<Person_Adress>(new Action<Person_Adress>(this.attach_Person_Adresses), new Action<Person_Adress>(this.detach_Person_Adresses));
		this._Telefons = new EntitySet<Telefon>(new Action<Telefon>(this.attach_Telefons), new Action<Telefon>(this.detach_Telefons));
		this._AdressTyp = default(EntityRef<AdressTyp>);
		this._AdressVariant = default(EntityRef<AdressVariant>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdressTyp_FKID", DbType="Int NOT NULL")]
	public int AdressTyp_FKID
	{
		get
		{
			return this._AdressTyp_FKID;
		}
		set
		{
			if ((this._AdressTyp_FKID != value))
			{
				if (this._AdressTyp.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAdressTyp_FKIDChanging(value);
				this.SendPropertyChanging();
				this._AdressTyp_FKID = value;
				this.SendPropertyChanged("AdressTyp_FKID");
				this.OnAdressTyp_FKIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdressVariant_FKID", DbType="Int NOT NULL")]
	public int AdressVariant_FKID
	{
		get
		{
			return this._AdressVariant_FKID;
		}
		set
		{
			if ((this._AdressVariant_FKID != value))
			{
				if (this._AdressVariant.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAdressVariant_FKIDChanging(value);
				this.SendPropertyChanging();
				this._AdressVariant_FKID = value;
				this.SendPropertyChanged("AdressVariant_FKID");
				this.OnAdressVariant_FKIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkapadDatum", DbType="DateTime NOT NULL")]
	public System.DateTime SkapadDatum
	{
		get
		{
			return this._SkapadDatum;
		}
		set
		{
			if ((this._SkapadDatum != value))
			{
				this.OnSkapadDatumChanging(value);
				this.SendPropertyChanging();
				this._SkapadDatum = value;
				this.SendPropertyChanged("SkapadDatum");
				this.OnSkapadDatumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateradDatum", DbType="DateTime")]
	public System.Nullable<System.DateTime> UpdateradDatum
	{
		get
		{
			return this._UpdateradDatum;
		}
		set
		{
			if ((this._UpdateradDatum != value))
			{
				this.OnUpdateradDatumChanging(value);
				this.SendPropertyChanging();
				this._UpdateradDatum = value;
				this.SendPropertyChanged("UpdateradDatum");
				this.OnUpdateradDatumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateradAv", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string UpdateradAv
	{
		get
		{
			return this._UpdateradAv;
		}
		set
		{
			if ((this._UpdateradAv != value))
			{
				this.OnUpdateradAvChanging(value);
				this.SendPropertyChanging();
				this._UpdateradAv = value;
				this.SendPropertyChanged("UpdateradAv");
				this.OnUpdateradAvChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adress_GatuAdress", Storage="_GatuAdresses", ThisKey="Id", OtherKey="Adress_FKID")]
	public EntitySet<GatuAdress> GatuAdresses
	{
		get
		{
			return this._GatuAdresses;
		}
		set
		{
			this._GatuAdresses.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adress_Mail", Storage="_Mails", ThisKey="Id", OtherKey="Adress_FKID")]
	public EntitySet<Mail> Mails
	{
		get
		{
			return this._Mails;
		}
		set
		{
			this._Mails.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adress_Organisation_Adress", Storage="_Organisation_Adresses", ThisKey="Id", OtherKey="Adress_FKID")]
	public EntitySet<Organisation_Adress> Organisation_Adresses
	{
		get
		{
			return this._Organisation_Adresses;
		}
		set
		{
			this._Organisation_Adresses.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adress_Person_Adress", Storage="_Person_Adresses", ThisKey="Id", OtherKey="Adress_FKID")]
	public EntitySet<Person_Adress> Person_Adresses
	{
		get
		{
			return this._Person_Adresses;
		}
		set
		{
			this._Person_Adresses.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adress_Telefon", Storage="_Telefons", ThisKey="Id", OtherKey="Adress_FKID")]
	public EntitySet<Telefon> Telefons
	{
		get
		{
			return this._Telefons;
		}
		set
		{
			this._Telefons.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdressTyp_Adress", Storage="_AdressTyp", ThisKey="AdressTyp_FKID", OtherKey="Id", IsForeignKey=true)]
	public AdressTyp AdressTyp
	{
		get
		{
			return this._AdressTyp.Entity;
		}
		set
		{
			AdressTyp previousValue = this._AdressTyp.Entity;
			if (((previousValue != value) 
						|| (this._AdressTyp.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._AdressTyp.Entity = null;
					previousValue.Adresses.Remove(this);
				}
				this._AdressTyp.Entity = value;
				if ((value != null))
				{
					value.Adresses.Add(this);
					this._AdressTyp_FKID = value.Id;
				}
				else
				{
					this._AdressTyp_FKID = default(int);
				}
				this.SendPropertyChanged("AdressTyp");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdressVariant_Adress", Storage="_AdressVariant", ThisKey="AdressVariant_FKID", OtherKey="Id", IsForeignKey=true)]
	public AdressVariant AdressVariant
	{
		get
		{
			return this._AdressVariant.Entity;
		}
		set
		{
			AdressVariant previousValue = this._AdressVariant.Entity;
			if (((previousValue != value) 
						|| (this._AdressVariant.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._AdressVariant.Entity = null;
					previousValue.Adresses.Remove(this);
				}
				this._AdressVariant.Entity = value;
				if ((value != null))
				{
					value.Adresses.Add(this);
					this._AdressVariant_FKID = value.Id;
				}
				else
				{
					this._AdressVariant_FKID = default(int);
				}
				this.SendPropertyChanged("AdressVariant");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_GatuAdresses(GatuAdress entity)
	{
		this.SendPropertyChanging();
		entity.Adress = this;
	}
	
	private void detach_GatuAdresses(GatuAdress entity)
	{
		this.SendPropertyChanging();
		entity.Adress = null;
	}
	
	private void attach_Mails(Mail entity)
	{
		this.SendPropertyChanging();
		entity.Adress = this;
	}
	
	private void detach_Mails(Mail entity)
	{
		this.SendPropertyChanging();
		entity.Adress = null;
	}
	
	private void attach_Organisation_Adresses(Organisation_Adress entity)
	{
		this.SendPropertyChanging();
		entity.Adress = this;
	}
	
	private void detach_Organisation_Adresses(Organisation_Adress entity)
	{
		this.SendPropertyChanging();
		entity.Adress = null;
	}
	
	private void attach_Person_Adresses(Person_Adress entity)
	{
		this.SendPropertyChanging();
		entity.Adress = this;
	}
	
	private void detach_Person_Adresses(Person_Adress entity)
	{
		this.SendPropertyChanging();
		entity.Adress = null;
	}
	
	private void attach_Telefons(Telefon entity)
	{
		this.SendPropertyChanging();
		entity.Adress = this;
	}
	
	private void detach_Telefons(Telefon entity)
	{
		this.SendPropertyChanging();
		entity.Adress = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="Person.Person_Sjuk_Hälsovårds_Personal")]
public partial class Person_Sjuk_Hälsovårds_Personal : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _Person_FKID;
	
	private int _Sjuk_Hälsovårds_Personal_FKID;
	
	private string _UpdateradAv;
	
	private System.DateTime _SkapadDatum;
	
	private System.Nullable<System.DateTime> _UpdateradDatum;
	
	private EntityRef<Person> _Person;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPerson_FKIDChanging(int value);
    partial void OnPerson_FKIDChanged();
    partial void OnSjuk_Hälsovårds_Personal_FKIDChanging(int value);
    partial void OnSjuk_Hälsovårds_Personal_FKIDChanged();
    partial void OnUpdateradAvChanging(string value);
    partial void OnUpdateradAvChanged();
    partial void OnSkapadDatumChanging(System.DateTime value);
    partial void OnSkapadDatumChanged();
    partial void OnUpdateradDatumChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateradDatumChanged();
    #endregion
	
	public Person_Sjuk_Hälsovårds_Personal()
	{
		this._Person = default(EntityRef<Person>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Person_FKID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Person_FKID
	{
		get
		{
			return this._Person_FKID;
		}
		set
		{
			if ((this._Person_FKID != value))
			{
				if (this._Person.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPerson_FKIDChanging(value);
				this.SendPropertyChanging();
				this._Person_FKID = value;
				this.SendPropertyChanged("Person_FKID");
				this.OnPerson_FKIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sjuk_Hälsovårds_Personal_FKID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Sjuk_Hälsovårds_Personal_FKID
	{
		get
		{
			return this._Sjuk_Hälsovårds_Personal_FKID;
		}
		set
		{
			if ((this._Sjuk_Hälsovårds_Personal_FKID != value))
			{
				this.OnSjuk_Hälsovårds_Personal_FKIDChanging(value);
				this.SendPropertyChanging();
				this._Sjuk_Hälsovårds_Personal_FKID = value;
				this.SendPropertyChanged("Sjuk_Hälsovårds_Personal_FKID");
				this.OnSjuk_Hälsovårds_Personal_FKIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateradAv", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string UpdateradAv
	{
		get
		{
			return this._UpdateradAv;
		}
		set
		{
			if ((this._UpdateradAv != value))
			{
				this.OnUpdateradAvChanging(value);
				this.SendPropertyChanging();
				this._UpdateradAv = value;
				this.SendPropertyChanged("UpdateradAv");
				this.OnUpdateradAvChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkapadDatum", DbType="DateTime NOT NULL")]
	public System.DateTime SkapadDatum
	{
		get
		{
			return this._SkapadDatum;
		}
		set
		{
			if ((this._SkapadDatum != value))
			{
				this.OnSkapadDatumChanging(value);
				this.SendPropertyChanging();
				this._SkapadDatum = value;
				this.SendPropertyChanged("SkapadDatum");
				this.OnSkapadDatumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateradDatum", DbType="DateTime")]
	public System.Nullable<System.DateTime> UpdateradDatum
	{
		get
		{
			return this._UpdateradDatum;
		}
		set
		{
			if ((this._UpdateradDatum != value))
			{
				this.OnUpdateradDatumChanging(value);
				this.SendPropertyChanging();
				this._UpdateradDatum = value;
				this.SendPropertyChanged("UpdateradDatum");
				this.OnUpdateradDatumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person_Sjuk_Hälsovårds_Personal", Storage="_Person", ThisKey="Person_FKID", OtherKey="Id", IsForeignKey=true)]
	public Person Person
	{
		get
		{
			return this._Person.Entity;
		}
		set
		{
			Person previousValue = this._Person.Entity;
			if (((previousValue != value) 
						|| (this._Person.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Person.Entity = null;
					previousValue.Person_Sjuk_Hälsovårds_Personals.Remove(this);
				}
				this._Person.Entity = value;
				if ((value != null))
				{
					value.Person_Sjuk_Hälsovårds_Personals.Add(this);
					this._Person_FKID = value.Id;
				}
				else
				{
					this._Person_FKID = default(int);
				}
				this.SendPropertyChanged("Person");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="Adress.AdressTyp")]
public partial class AdressTyp : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Typ;
	
	private System.DateTime _SkapadDatum;
	
	private System.Nullable<System.DateTime> _UpdateradDatum;
	
	private string _UpdateradAv;
	
	private EntitySet<Adress> _Adresses;
	
	private EntitySet<AdressVariant> _AdressVariants;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTypChanging(string value);
    partial void OnTypChanged();
    partial void OnSkapadDatumChanging(System.DateTime value);
    partial void OnSkapadDatumChanged();
    partial void OnUpdateradDatumChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateradDatumChanged();
    partial void OnUpdateradAvChanging(string value);
    partial void OnUpdateradAvChanged();
    #endregion
	
	public AdressTyp()
	{
		this._Adresses = new EntitySet<Adress>(new Action<Adress>(this.attach_Adresses), new Action<Adress>(this.detach_Adresses));
		this._AdressVariants = new EntitySet<AdressVariant>(new Action<AdressVariant>(this.attach_AdressVariants), new Action<AdressVariant>(this.detach_AdressVariants));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Typ", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Typ
	{
		get
		{
			return this._Typ;
		}
		set
		{
			if ((this._Typ != value))
			{
				this.OnTypChanging(value);
				this.SendPropertyChanging();
				this._Typ = value;
				this.SendPropertyChanged("Typ");
				this.OnTypChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkapadDatum", DbType="DateTime NOT NULL")]
	public System.DateTime SkapadDatum
	{
		get
		{
			return this._SkapadDatum;
		}
		set
		{
			if ((this._SkapadDatum != value))
			{
				this.OnSkapadDatumChanging(value);
				this.SendPropertyChanging();
				this._SkapadDatum = value;
				this.SendPropertyChanged("SkapadDatum");
				this.OnSkapadDatumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateradDatum", DbType="DateTime")]
	public System.Nullable<System.DateTime> UpdateradDatum
	{
		get
		{
			return this._UpdateradDatum;
		}
		set
		{
			if ((this._UpdateradDatum != value))
			{
				this.OnUpdateradDatumChanging(value);
				this.SendPropertyChanging();
				this._UpdateradDatum = value;
				this.SendPropertyChanged("UpdateradDatum");
				this.OnUpdateradDatumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateradAv", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string UpdateradAv
	{
		get
		{
			return this._UpdateradAv;
		}
		set
		{
			if ((this._UpdateradAv != value))
			{
				this.OnUpdateradAvChanging(value);
				this.SendPropertyChanging();
				this._UpdateradAv = value;
				this.SendPropertyChanged("UpdateradAv");
				this.OnUpdateradAvChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdressTyp_Adress", Storage="_Adresses", ThisKey="Id", OtherKey="AdressTyp_FKID")]
	public EntitySet<Adress> Adresses
	{
		get
		{
			return this._Adresses;
		}
		set
		{
			this._Adresses.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdressTyp_AdressVariant", Storage="_AdressVariants", ThisKey="Id", OtherKey="AdressTyp_FKID")]
	public EntitySet<AdressVariant> AdressVariants
	{
		get
		{
			return this._AdressVariants;
		}
		set
		{
			this._AdressVariants.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Adresses(Adress entity)
	{
		this.SendPropertyChanging();
		entity.AdressTyp = this;
	}
	
	private void detach_Adresses(Adress entity)
	{
		this.SendPropertyChanging();
		entity.AdressTyp = null;
	}
	
	private void attach_AdressVariants(AdressVariant entity)
	{
		this.SendPropertyChanging();
		entity.AdressTyp = this;
	}
	
	private void detach_AdressVariants(AdressVariant entity)
	{
		this.SendPropertyChanging();
		entity.AdressTyp = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="Adress.AdressVariant")]
public partial class AdressVariant : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _AdressTyp_FKID;
	
	private string _Variant;
	
	private System.DateTime _SkapadDatum;
	
	private System.Nullable<System.DateTime> _UpdateradDatum;
	
	private string _UpdateradAv;
	
	private EntitySet<Adress> _Adresses;
	
	private EntityRef<AdressTyp> _AdressTyp;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAdressTyp_FKIDChanging(int value);
    partial void OnAdressTyp_FKIDChanged();
    partial void OnVariantChanging(string value);
    partial void OnVariantChanged();
    partial void OnSkapadDatumChanging(System.DateTime value);
    partial void OnSkapadDatumChanged();
    partial void OnUpdateradDatumChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateradDatumChanged();
    partial void OnUpdateradAvChanging(string value);
    partial void OnUpdateradAvChanged();
    #endregion
	
	public AdressVariant()
	{
		this._Adresses = new EntitySet<Adress>(new Action<Adress>(this.attach_Adresses), new Action<Adress>(this.detach_Adresses));
		this._AdressTyp = default(EntityRef<AdressTyp>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdressTyp_FKID", DbType="Int NOT NULL")]
	public int AdressTyp_FKID
	{
		get
		{
			return this._AdressTyp_FKID;
		}
		set
		{
			if ((this._AdressTyp_FKID != value))
			{
				if (this._AdressTyp.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAdressTyp_FKIDChanging(value);
				this.SendPropertyChanging();
				this._AdressTyp_FKID = value;
				this.SendPropertyChanged("AdressTyp_FKID");
				this.OnAdressTyp_FKIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Variant", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
	public string Variant
	{
		get
		{
			return this._Variant;
		}
		set
		{
			if ((this._Variant != value))
			{
				this.OnVariantChanging(value);
				this.SendPropertyChanging();
				this._Variant = value;
				this.SendPropertyChanged("Variant");
				this.OnVariantChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkapadDatum", DbType="DateTime NOT NULL")]
	public System.DateTime SkapadDatum
	{
		get
		{
			return this._SkapadDatum;
		}
		set
		{
			if ((this._SkapadDatum != value))
			{
				this.OnSkapadDatumChanging(value);
				this.SendPropertyChanging();
				this._SkapadDatum = value;
				this.SendPropertyChanged("SkapadDatum");
				this.OnSkapadDatumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateradDatum", DbType="DateTime")]
	public System.Nullable<System.DateTime> UpdateradDatum
	{
		get
		{
			return this._UpdateradDatum;
		}
		set
		{
			if ((this._UpdateradDatum != value))
			{
				this.OnUpdateradDatumChanging(value);
				this.SendPropertyChanging();
				this._UpdateradDatum = value;
				this.SendPropertyChanged("UpdateradDatum");
				this.OnUpdateradDatumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateradAv", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string UpdateradAv
	{
		get
		{
			return this._UpdateradAv;
		}
		set
		{
			if ((this._UpdateradAv != value))
			{
				this.OnUpdateradAvChanging(value);
				this.SendPropertyChanging();
				this._UpdateradAv = value;
				this.SendPropertyChanged("UpdateradAv");
				this.OnUpdateradAvChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdressVariant_Adress", Storage="_Adresses", ThisKey="Id", OtherKey="AdressVariant_FKID")]
	public EntitySet<Adress> Adresses
	{
		get
		{
			return this._Adresses;
		}
		set
		{
			this._Adresses.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdressTyp_AdressVariant", Storage="_AdressTyp", ThisKey="AdressTyp_FKID", OtherKey="Id", IsForeignKey=true)]
	public AdressTyp AdressTyp
	{
		get
		{
			return this._AdressTyp.Entity;
		}
		set
		{
			AdressTyp previousValue = this._AdressTyp.Entity;
			if (((previousValue != value) 
						|| (this._AdressTyp.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._AdressTyp.Entity = null;
					previousValue.AdressVariants.Remove(this);
				}
				this._AdressTyp.Entity = value;
				if ((value != null))
				{
					value.AdressVariants.Add(this);
					this._AdressTyp_FKID = value.Id;
				}
				else
				{
					this._AdressTyp_FKID = default(int);
				}
				this.SendPropertyChanged("AdressTyp");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Adresses(Adress entity)
	{
		this.SendPropertyChanging();
		entity.AdressVariant = this;
	}
	
	private void detach_Adresses(Adress entity)
	{
		this.SendPropertyChanging();
		entity.AdressVariant = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="Adress.GatuAdress")]
public partial class GatuAdress : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _Adress_FKID;
	
	private string _AdressRad1;
	
	private string _AdressRad2;
	
	private string _AdressRad3;
	
	private string _AdressRad4;
	
	private string _AdressRad5;
	
	private decimal _Postnummer;
	
	private string _Stad;
	
	private string _Land;
	
	private System.DateTime _SkapadDatum;
	
	private System.Nullable<System.DateTime> _UpdateradDatum;
	
	private string _UpdateradAv;
	
	private EntityRef<Adress> _Adress;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAdress_FKIDChanging(int value);
    partial void OnAdress_FKIDChanged();
    partial void OnAdressRad1Changing(string value);
    partial void OnAdressRad1Changed();
    partial void OnAdressRad2Changing(string value);
    partial void OnAdressRad2Changed();
    partial void OnAdressRad3Changing(string value);
    partial void OnAdressRad3Changed();
    partial void OnAdressRad4Changing(string value);
    partial void OnAdressRad4Changed();
    partial void OnAdressRad5Changing(string value);
    partial void OnAdressRad5Changed();
    partial void OnPostnummerChanging(decimal value);
    partial void OnPostnummerChanged();
    partial void OnStadChanging(string value);
    partial void OnStadChanged();
    partial void OnLandChanging(string value);
    partial void OnLandChanged();
    partial void OnSkapadDatumChanging(System.DateTime value);
    partial void OnSkapadDatumChanged();
    partial void OnUpdateradDatumChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateradDatumChanged();
    partial void OnUpdateradAvChanging(string value);
    partial void OnUpdateradAvChanged();
    #endregion
	
	public GatuAdress()
	{
		this._Adress = default(EntityRef<Adress>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adress_FKID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Adress_FKID
	{
		get
		{
			return this._Adress_FKID;
		}
		set
		{
			if ((this._Adress_FKID != value))
			{
				if (this._Adress.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAdress_FKIDChanging(value);
				this.SendPropertyChanging();
				this._Adress_FKID = value;
				this.SendPropertyChanged("Adress_FKID");
				this.OnAdress_FKIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdressRad1", DbType="NVarChar(255)")]
	public string AdressRad1
	{
		get
		{
			return this._AdressRad1;
		}
		set
		{
			if ((this._AdressRad1 != value))
			{
				this.OnAdressRad1Changing(value);
				this.SendPropertyChanging();
				this._AdressRad1 = value;
				this.SendPropertyChanged("AdressRad1");
				this.OnAdressRad1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdressRad2", DbType="NVarChar(255)")]
	public string AdressRad2
	{
		get
		{
			return this._AdressRad2;
		}
		set
		{
			if ((this._AdressRad2 != value))
			{
				this.OnAdressRad2Changing(value);
				this.SendPropertyChanging();
				this._AdressRad2 = value;
				this.SendPropertyChanged("AdressRad2");
				this.OnAdressRad2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdressRad3", DbType="NVarChar(255)")]
	public string AdressRad3
	{
		get
		{
			return this._AdressRad3;
		}
		set
		{
			if ((this._AdressRad3 != value))
			{
				this.OnAdressRad3Changing(value);
				this.SendPropertyChanging();
				this._AdressRad3 = value;
				this.SendPropertyChanged("AdressRad3");
				this.OnAdressRad3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdressRad4", DbType="NVarChar(255)")]
	public string AdressRad4
	{
		get
		{
			return this._AdressRad4;
		}
		set
		{
			if ((this._AdressRad4 != value))
			{
				this.OnAdressRad4Changing(value);
				this.SendPropertyChanging();
				this._AdressRad4 = value;
				this.SendPropertyChanged("AdressRad4");
				this.OnAdressRad4Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdressRad5", DbType="NVarChar(255)")]
	public string AdressRad5
	{
		get
		{
			return this._AdressRad5;
		}
		set
		{
			if ((this._AdressRad5 != value))
			{
				this.OnAdressRad5Changing(value);
				this.SendPropertyChanging();
				this._AdressRad5 = value;
				this.SendPropertyChanged("AdressRad5");
				this.OnAdressRad5Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postnummer", DbType="Decimal(18,0) NOT NULL")]
	public decimal Postnummer
	{
		get
		{
			return this._Postnummer;
		}
		set
		{
			if ((this._Postnummer != value))
			{
				this.OnPostnummerChanging(value);
				this.SendPropertyChanging();
				this._Postnummer = value;
				this.SendPropertyChanged("Postnummer");
				this.OnPostnummerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stad", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
	public string Stad
	{
		get
		{
			return this._Stad;
		}
		set
		{
			if ((this._Stad != value))
			{
				this.OnStadChanging(value);
				this.SendPropertyChanging();
				this._Stad = value;
				this.SendPropertyChanged("Stad");
				this.OnStadChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Land", DbType="NVarChar(255)")]
	public string Land
	{
		get
		{
			return this._Land;
		}
		set
		{
			if ((this._Land != value))
			{
				this.OnLandChanging(value);
				this.SendPropertyChanging();
				this._Land = value;
				this.SendPropertyChanged("Land");
				this.OnLandChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkapadDatum", DbType="DateTime NOT NULL")]
	public System.DateTime SkapadDatum
	{
		get
		{
			return this._SkapadDatum;
		}
		set
		{
			if ((this._SkapadDatum != value))
			{
				this.OnSkapadDatumChanging(value);
				this.SendPropertyChanging();
				this._SkapadDatum = value;
				this.SendPropertyChanged("SkapadDatum");
				this.OnSkapadDatumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateradDatum", DbType="DateTime")]
	public System.Nullable<System.DateTime> UpdateradDatum
	{
		get
		{
			return this._UpdateradDatum;
		}
		set
		{
			if ((this._UpdateradDatum != value))
			{
				this.OnUpdateradDatumChanging(value);
				this.SendPropertyChanging();
				this._UpdateradDatum = value;
				this.SendPropertyChanged("UpdateradDatum");
				this.OnUpdateradDatumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateradAv", DbType="NVarChar(100)")]
	public string UpdateradAv
	{
		get
		{
			return this._UpdateradAv;
		}
		set
		{
			if ((this._UpdateradAv != value))
			{
				this.OnUpdateradAvChanging(value);
				this.SendPropertyChanging();
				this._UpdateradAv = value;
				this.SendPropertyChanged("UpdateradAv");
				this.OnUpdateradAvChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adress_GatuAdress", Storage="_Adress", ThisKey="Adress_FKID", OtherKey="Id", IsForeignKey=true)]
	public Adress Adress
	{
		get
		{
			return this._Adress.Entity;
		}
		set
		{
			Adress previousValue = this._Adress.Entity;
			if (((previousValue != value) 
						|| (this._Adress.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Adress.Entity = null;
					previousValue.GatuAdresses.Remove(this);
				}
				this._Adress.Entity = value;
				if ((value != null))
				{
					value.GatuAdresses.Add(this);
					this._Adress_FKID = value.Id;
				}
				else
				{
					this._Adress_FKID = default(int);
				}
				this.SendPropertyChanged("Adress");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="Adress.Mail")]
public partial class Mail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _Adress_FKID;
	
	private string _MailAdress;
	
	private System.DateTime _SkapadDatum;
	
	private System.Nullable<System.DateTime> _UpdateradDatum;
	
	private string _UpdateradAv;
	
	private EntityRef<Adress> _Adress;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAdress_FKIDChanging(int value);
    partial void OnAdress_FKIDChanged();
    partial void OnMailAdressChanging(string value);
    partial void OnMailAdressChanged();
    partial void OnSkapadDatumChanging(System.DateTime value);
    partial void OnSkapadDatumChanged();
    partial void OnUpdateradDatumChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateradDatumChanged();
    partial void OnUpdateradAvChanging(string value);
    partial void OnUpdateradAvChanged();
    #endregion
	
	public Mail()
	{
		this._Adress = default(EntityRef<Adress>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adress_FKID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Adress_FKID
	{
		get
		{
			return this._Adress_FKID;
		}
		set
		{
			if ((this._Adress_FKID != value))
			{
				if (this._Adress.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAdress_FKIDChanging(value);
				this.SendPropertyChanging();
				this._Adress_FKID = value;
				this.SendPropertyChanged("Adress_FKID");
				this.OnAdress_FKIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailAdress", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string MailAdress
	{
		get
		{
			return this._MailAdress;
		}
		set
		{
			if ((this._MailAdress != value))
			{
				this.OnMailAdressChanging(value);
				this.SendPropertyChanging();
				this._MailAdress = value;
				this.SendPropertyChanged("MailAdress");
				this.OnMailAdressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkapadDatum", DbType="DateTime NOT NULL")]
	public System.DateTime SkapadDatum
	{
		get
		{
			return this._SkapadDatum;
		}
		set
		{
			if ((this._SkapadDatum != value))
			{
				this.OnSkapadDatumChanging(value);
				this.SendPropertyChanging();
				this._SkapadDatum = value;
				this.SendPropertyChanged("SkapadDatum");
				this.OnSkapadDatumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateradDatum", DbType="DateTime")]
	public System.Nullable<System.DateTime> UpdateradDatum
	{
		get
		{
			return this._UpdateradDatum;
		}
		set
		{
			if ((this._UpdateradDatum != value))
			{
				this.OnUpdateradDatumChanging(value);
				this.SendPropertyChanging();
				this._UpdateradDatum = value;
				this.SendPropertyChanged("UpdateradDatum");
				this.OnUpdateradDatumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateradAv", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string UpdateradAv
	{
		get
		{
			return this._UpdateradAv;
		}
		set
		{
			if ((this._UpdateradAv != value))
			{
				this.OnUpdateradAvChanging(value);
				this.SendPropertyChanging();
				this._UpdateradAv = value;
				this.SendPropertyChanged("UpdateradAv");
				this.OnUpdateradAvChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adress_Mail", Storage="_Adress", ThisKey="Adress_FKID", OtherKey="Id", IsForeignKey=true)]
	public Adress Adress
	{
		get
		{
			return this._Adress.Entity;
		}
		set
		{
			Adress previousValue = this._Adress.Entity;
			if (((previousValue != value) 
						|| (this._Adress.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Adress.Entity = null;
					previousValue.Mails.Remove(this);
				}
				this._Adress.Entity = value;
				if ((value != null))
				{
					value.Mails.Add(this);
					this._Adress_FKID = value.Id;
				}
				else
				{
					this._Adress_FKID = default(int);
				}
				this.SendPropertyChanged("Adress");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="Adress.Organisation_Adress")]
public partial class Organisation_Adress : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _Organisation_FKID;
	
	private int _Adress_FKID;
	
	private string _UpdateradAv;
	
	private System.Nullable<System.DateTime> _SkapadDatum;
	
	private System.Nullable<System.DateTime> _UpdateradDatum;
	
	private EntityRef<Adress> _Adress;
	
	private EntityRef<Organisation> _Organisation;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOrganisation_FKIDChanging(int value);
    partial void OnOrganisation_FKIDChanged();
    partial void OnAdress_FKIDChanging(int value);
    partial void OnAdress_FKIDChanged();
    partial void OnUpdateradAvChanging(string value);
    partial void OnUpdateradAvChanged();
    partial void OnSkapadDatumChanging(System.Nullable<System.DateTime> value);
    partial void OnSkapadDatumChanged();
    partial void OnUpdateradDatumChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateradDatumChanged();
    #endregion
	
	public Organisation_Adress()
	{
		this._Adress = default(EntityRef<Adress>);
		this._Organisation = default(EntityRef<Organisation>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organisation_FKID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Organisation_FKID
	{
		get
		{
			return this._Organisation_FKID;
		}
		set
		{
			if ((this._Organisation_FKID != value))
			{
				if (this._Organisation.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnOrganisation_FKIDChanging(value);
				this.SendPropertyChanging();
				this._Organisation_FKID = value;
				this.SendPropertyChanged("Organisation_FKID");
				this.OnOrganisation_FKIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adress_FKID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Adress_FKID
	{
		get
		{
			return this._Adress_FKID;
		}
		set
		{
			if ((this._Adress_FKID != value))
			{
				if (this._Adress.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAdress_FKIDChanging(value);
				this.SendPropertyChanging();
				this._Adress_FKID = value;
				this.SendPropertyChanged("Adress_FKID");
				this.OnAdress_FKIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateradAv", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string UpdateradAv
	{
		get
		{
			return this._UpdateradAv;
		}
		set
		{
			if ((this._UpdateradAv != value))
			{
				this.OnUpdateradAvChanging(value);
				this.SendPropertyChanging();
				this._UpdateradAv = value;
				this.SendPropertyChanged("UpdateradAv");
				this.OnUpdateradAvChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkapadDatum", DbType="DateTime")]
	public System.Nullable<System.DateTime> SkapadDatum
	{
		get
		{
			return this._SkapadDatum;
		}
		set
		{
			if ((this._SkapadDatum != value))
			{
				this.OnSkapadDatumChanging(value);
				this.SendPropertyChanging();
				this._SkapadDatum = value;
				this.SendPropertyChanged("SkapadDatum");
				this.OnSkapadDatumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateradDatum", DbType="DateTime")]
	public System.Nullable<System.DateTime> UpdateradDatum
	{
		get
		{
			return this._UpdateradDatum;
		}
		set
		{
			if ((this._UpdateradDatum != value))
			{
				this.OnUpdateradDatumChanging(value);
				this.SendPropertyChanging();
				this._UpdateradDatum = value;
				this.SendPropertyChanged("UpdateradDatum");
				this.OnUpdateradDatumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adress_Organisation_Adress", Storage="_Adress", ThisKey="Adress_FKID", OtherKey="Id", IsForeignKey=true)]
	public Adress Adress
	{
		get
		{
			return this._Adress.Entity;
		}
		set
		{
			Adress previousValue = this._Adress.Entity;
			if (((previousValue != value) 
						|| (this._Adress.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Adress.Entity = null;
					previousValue.Organisation_Adresses.Remove(this);
				}
				this._Adress.Entity = value;
				if ((value != null))
				{
					value.Organisation_Adresses.Add(this);
					this._Adress_FKID = value.Id;
				}
				else
				{
					this._Adress_FKID = default(int);
				}
				this.SendPropertyChanged("Adress");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_Organisation_Adress", Storage="_Organisation", ThisKey="Organisation_FKID", OtherKey="Id", IsForeignKey=true)]
	public Organisation Organisation
	{
		get
		{
			return this._Organisation.Entity;
		}
		set
		{
			Organisation previousValue = this._Organisation.Entity;
			if (((previousValue != value) 
						|| (this._Organisation.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Organisation.Entity = null;
					previousValue.Organisation_Adresses.Remove(this);
				}
				this._Organisation.Entity = value;
				if ((value != null))
				{
					value.Organisation_Adresses.Add(this);
					this._Organisation_FKID = value.Id;
				}
				else
				{
					this._Organisation_FKID = default(int);
				}
				this.SendPropertyChanged("Organisation");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="Adress.Person_Adress")]
public partial class Person_Adress : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _Person_FKID;
	
	private int _Adress_FKID;
	
	private string _UpdateradAv;
	
	private System.Nullable<System.DateTime> _SkapadDatum;
	
	private System.Nullable<System.DateTime> _UpdateradDatum;
	
	private EntityRef<Adress> _Adress;
	
	private EntityRef<Person> _Person;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPerson_FKIDChanging(int value);
    partial void OnPerson_FKIDChanged();
    partial void OnAdress_FKIDChanging(int value);
    partial void OnAdress_FKIDChanged();
    partial void OnUpdateradAvChanging(string value);
    partial void OnUpdateradAvChanged();
    partial void OnSkapadDatumChanging(System.Nullable<System.DateTime> value);
    partial void OnSkapadDatumChanged();
    partial void OnUpdateradDatumChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateradDatumChanged();
    #endregion
	
	public Person_Adress()
	{
		this._Adress = default(EntityRef<Adress>);
		this._Person = default(EntityRef<Person>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Person_FKID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Person_FKID
	{
		get
		{
			return this._Person_FKID;
		}
		set
		{
			if ((this._Person_FKID != value))
			{
				if (this._Person.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPerson_FKIDChanging(value);
				this.SendPropertyChanging();
				this._Person_FKID = value;
				this.SendPropertyChanged("Person_FKID");
				this.OnPerson_FKIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adress_FKID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Adress_FKID
	{
		get
		{
			return this._Adress_FKID;
		}
		set
		{
			if ((this._Adress_FKID != value))
			{
				if (this._Adress.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAdress_FKIDChanging(value);
				this.SendPropertyChanging();
				this._Adress_FKID = value;
				this.SendPropertyChanged("Adress_FKID");
				this.OnAdress_FKIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateradAv", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string UpdateradAv
	{
		get
		{
			return this._UpdateradAv;
		}
		set
		{
			if ((this._UpdateradAv != value))
			{
				this.OnUpdateradAvChanging(value);
				this.SendPropertyChanging();
				this._UpdateradAv = value;
				this.SendPropertyChanged("UpdateradAv");
				this.OnUpdateradAvChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkapadDatum", DbType="DateTime")]
	public System.Nullable<System.DateTime> SkapadDatum
	{
		get
		{
			return this._SkapadDatum;
		}
		set
		{
			if ((this._SkapadDatum != value))
			{
				this.OnSkapadDatumChanging(value);
				this.SendPropertyChanging();
				this._SkapadDatum = value;
				this.SendPropertyChanged("SkapadDatum");
				this.OnSkapadDatumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateradDatum", DbType="DateTime")]
	public System.Nullable<System.DateTime> UpdateradDatum
	{
		get
		{
			return this._UpdateradDatum;
		}
		set
		{
			if ((this._UpdateradDatum != value))
			{
				this.OnUpdateradDatumChanging(value);
				this.SendPropertyChanging();
				this._UpdateradDatum = value;
				this.SendPropertyChanged("UpdateradDatum");
				this.OnUpdateradDatumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adress_Person_Adress", Storage="_Adress", ThisKey="Adress_FKID", OtherKey="Id", IsForeignKey=true)]
	public Adress Adress
	{
		get
		{
			return this._Adress.Entity;
		}
		set
		{
			Adress previousValue = this._Adress.Entity;
			if (((previousValue != value) 
						|| (this._Adress.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Adress.Entity = null;
					previousValue.Person_Adresses.Remove(this);
				}
				this._Adress.Entity = value;
				if ((value != null))
				{
					value.Person_Adresses.Add(this);
					this._Adress_FKID = value.Id;
				}
				else
				{
					this._Adress_FKID = default(int);
				}
				this.SendPropertyChanged("Adress");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person_Adress", Storage="_Person", ThisKey="Person_FKID", OtherKey="Id", IsForeignKey=true)]
	public Person Person
	{
		get
		{
			return this._Person.Entity;
		}
		set
		{
			Person previousValue = this._Person.Entity;
			if (((previousValue != value) 
						|| (this._Person.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Person.Entity = null;
					previousValue.Person_Adresses.Remove(this);
				}
				this._Person.Entity = value;
				if ((value != null))
				{
					value.Person_Adresses.Add(this);
					this._Person_FKID = value.Id;
				}
				else
				{
					this._Person_FKID = default(int);
				}
				this.SendPropertyChanged("Person");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="Adress.Telefon")]
public partial class Telefon : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _Adress_FKID;
	
	private decimal _TelefonNummer;
	
	private System.DateTime _SkapadDatum;
	
	private System.Nullable<System.DateTime> _UpdateradDatum;
	
	private string _UpdateradAv;
	
	private EntityRef<Adress> _Adress;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAdress_FKIDChanging(int value);
    partial void OnAdress_FKIDChanged();
    partial void OnTelefonNummerChanging(decimal value);
    partial void OnTelefonNummerChanged();
    partial void OnSkapadDatumChanging(System.DateTime value);
    partial void OnSkapadDatumChanged();
    partial void OnUpdateradDatumChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateradDatumChanged();
    partial void OnUpdateradAvChanging(string value);
    partial void OnUpdateradAvChanged();
    #endregion
	
	public Telefon()
	{
		this._Adress = default(EntityRef<Adress>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adress_FKID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Adress_FKID
	{
		get
		{
			return this._Adress_FKID;
		}
		set
		{
			if ((this._Adress_FKID != value))
			{
				if (this._Adress.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAdress_FKIDChanging(value);
				this.SendPropertyChanging();
				this._Adress_FKID = value;
				this.SendPropertyChanged("Adress_FKID");
				this.OnAdress_FKIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelefonNummer", DbType="Decimal(25,0) NOT NULL")]
	public decimal TelefonNummer
	{
		get
		{
			return this._TelefonNummer;
		}
		set
		{
			if ((this._TelefonNummer != value))
			{
				this.OnTelefonNummerChanging(value);
				this.SendPropertyChanging();
				this._TelefonNummer = value;
				this.SendPropertyChanged("TelefonNummer");
				this.OnTelefonNummerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkapadDatum", DbType="DateTime NOT NULL")]
	public System.DateTime SkapadDatum
	{
		get
		{
			return this._SkapadDatum;
		}
		set
		{
			if ((this._SkapadDatum != value))
			{
				this.OnSkapadDatumChanging(value);
				this.SendPropertyChanging();
				this._SkapadDatum = value;
				this.SendPropertyChanged("SkapadDatum");
				this.OnSkapadDatumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateradDatum", DbType="DateTime")]
	public System.Nullable<System.DateTime> UpdateradDatum
	{
		get
		{
			return this._UpdateradDatum;
		}
		set
		{
			if ((this._UpdateradDatum != value))
			{
				this.OnUpdateradDatumChanging(value);
				this.SendPropertyChanging();
				this._UpdateradDatum = value;
				this.SendPropertyChanged("UpdateradDatum");
				this.OnUpdateradDatumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateradAv", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string UpdateradAv
	{
		get
		{
			return this._UpdateradAv;
		}
		set
		{
			if ((this._UpdateradAv != value))
			{
				this.OnUpdateradAvChanging(value);
				this.SendPropertyChanging();
				this._UpdateradAv = value;
				this.SendPropertyChanged("UpdateradAv");
				this.OnUpdateradAvChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adress_Telefon", Storage="_Adress", ThisKey="Adress_FKID", OtherKey="Id", IsForeignKey=true)]
	public Adress Adress
	{
		get
		{
			return this._Adress.Entity;
		}
		set
		{
			Adress previousValue = this._Adress.Entity;
			if (((previousValue != value) 
						|| (this._Adress.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Adress.Entity = null;
					previousValue.Telefons.Remove(this);
				}
				this._Adress.Entity = value;
				if ((value != null))
				{
					value.Telefons.Add(this);
					this._Adress_FKID = value.Id;
				}
				else
				{
					this._Adress_FKID = default(int);
				}
				this.SendPropertyChanged("Adress");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="Organisation.Organisation")]
public partial class Organisation : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _OrganisationsId;
	
	private System.DateTime _SkapadDatum;
	
	private System.Nullable<System.DateTime> _UpDateradDatum;
	
	private string _UpdateradAv;
	
	private System.Nullable<int> _IngårIOrganisation;
	
	private EntitySet<Organisation_Adress> _Organisation_Adresses;
	
	private EntitySet<Organisation> _Organisations;
	
	private EntityRef<Organisation> _Organisation1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOrganisationsIdChanging(string value);
    partial void OnOrganisationsIdChanged();
    partial void OnSkapadDatumChanging(System.DateTime value);
    partial void OnSkapadDatumChanged();
    partial void OnUpDateradDatumChanging(System.Nullable<System.DateTime> value);
    partial void OnUpDateradDatumChanged();
    partial void OnUpdateradAvChanging(string value);
    partial void OnUpdateradAvChanged();
    partial void OnIngårIOrganisationChanging(System.Nullable<int> value);
    partial void OnIngårIOrganisationChanged();
    #endregion
	
	public Organisation()
	{
		this._Organisation_Adresses = new EntitySet<Organisation_Adress>(new Action<Organisation_Adress>(this.attach_Organisation_Adresses), new Action<Organisation_Adress>(this.detach_Organisation_Adresses));
		this._Organisations = new EntitySet<Organisation>(new Action<Organisation>(this.attach_Organisations), new Action<Organisation>(this.detach_Organisations));
		this._Organisation1 = default(EntityRef<Organisation>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganisationsId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string OrganisationsId
	{
		get
		{
			return this._OrganisationsId;
		}
		set
		{
			if ((this._OrganisationsId != value))
			{
				this.OnOrganisationsIdChanging(value);
				this.SendPropertyChanging();
				this._OrganisationsId = value;
				this.SendPropertyChanged("OrganisationsId");
				this.OnOrganisationsIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkapadDatum", DbType="DateTime NOT NULL")]
	public System.DateTime SkapadDatum
	{
		get
		{
			return this._SkapadDatum;
		}
		set
		{
			if ((this._SkapadDatum != value))
			{
				this.OnSkapadDatumChanging(value);
				this.SendPropertyChanging();
				this._SkapadDatum = value;
				this.SendPropertyChanged("SkapadDatum");
				this.OnSkapadDatumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpDateradDatum", DbType="DateTime")]
	public System.Nullable<System.DateTime> UpDateradDatum
	{
		get
		{
			return this._UpDateradDatum;
		}
		set
		{
			if ((this._UpDateradDatum != value))
			{
				this.OnUpDateradDatumChanging(value);
				this.SendPropertyChanging();
				this._UpDateradDatum = value;
				this.SendPropertyChanged("UpDateradDatum");
				this.OnUpDateradDatumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateradAv", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string UpdateradAv
	{
		get
		{
			return this._UpdateradAv;
		}
		set
		{
			if ((this._UpdateradAv != value))
			{
				this.OnUpdateradAvChanging(value);
				this.SendPropertyChanging();
				this._UpdateradAv = value;
				this.SendPropertyChanged("UpdateradAv");
				this.OnUpdateradAvChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngårIOrganisation", DbType="Int")]
	public System.Nullable<int> IngårIOrganisation
	{
		get
		{
			return this._IngårIOrganisation;
		}
		set
		{
			if ((this._IngårIOrganisation != value))
			{
				if (this._Organisation1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIngårIOrganisationChanging(value);
				this.SendPropertyChanging();
				this._IngårIOrganisation = value;
				this.SendPropertyChanged("IngårIOrganisation");
				this.OnIngårIOrganisationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_Organisation_Adress", Storage="_Organisation_Adresses", ThisKey="Id", OtherKey="Organisation_FKID")]
	public EntitySet<Organisation_Adress> Organisation_Adresses
	{
		get
		{
			return this._Organisation_Adresses;
		}
		set
		{
			this._Organisation_Adresses.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_Organisation", Storage="_Organisations", ThisKey="Id", OtherKey="IngårIOrganisation")]
	public EntitySet<Organisation> Organisations
	{
		get
		{
			return this._Organisations;
		}
		set
		{
			this._Organisations.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_Organisation", Storage="_Organisation1", ThisKey="IngårIOrganisation", OtherKey="Id", IsForeignKey=true)]
	public Organisation Organisation1
	{
		get
		{
			return this._Organisation1.Entity;
		}
		set
		{
			Organisation previousValue = this._Organisation1.Entity;
			if (((previousValue != value) 
						|| (this._Organisation1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Organisation1.Entity = null;
					previousValue.Organisations.Remove(this);
				}
				this._Organisation1.Entity = value;
				if ((value != null))
				{
					value.Organisations.Add(this);
					this._IngårIOrganisation = value.Id;
				}
				else
				{
					this._IngårIOrganisation = default(Nullable<int>);
				}
				this.SendPropertyChanged("Organisation1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Organisation_Adresses(Organisation_Adress entity)
	{
		this.SendPropertyChanging();
		entity.Organisation = this;
	}
	
	private void detach_Organisation_Adresses(Organisation_Adress entity)
	{
		this.SendPropertyChanging();
		entity.Organisation = null;
	}
	
	private void attach_Organisations(Organisation entity)
	{
		this.SendPropertyChanging();
		entity.Organisation1 = this;
	}
	
	private void detach_Organisations(Organisation entity)
	{
		this.SendPropertyChanging();
		entity.Organisation1 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="Person.Person")]
public partial class Person : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _FörNamn;
	
	private string _MellanNamn;
	
	private string _Efternamn;
	
	private string _PersonNummer;
	
	private System.DateTime _SkapadDatum;
	
	private System.Nullable<System.DateTime> _UpdateradDatum;
	
	private string _UpdateradAv;
	
	private EntitySet<Person_Sjuk_Hälsovårds_Personal> _Person_Sjuk_Hälsovårds_Personals;
	
	private EntitySet<Person_Adress> _Person_Adresses;
	
	private EntitySet<Person_AnnanPerson> _Person_AnnanPersons;
	
	private EntitySet<Person_Anställd> _Person_Anställds;
	
	private EntitySet<Person_Konsult> _Person_Konsults;
	
	private EntitySet<Person_Patient> _Person_Patients;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFörNamnChanging(string value);
    partial void OnFörNamnChanged();
    partial void OnMellanNamnChanging(string value);
    partial void OnMellanNamnChanged();
    partial void OnEfternamnChanging(string value);
    partial void OnEfternamnChanged();
    partial void OnPersonNummerChanging(string value);
    partial void OnPersonNummerChanged();
    partial void OnSkapadDatumChanging(System.DateTime value);
    partial void OnSkapadDatumChanged();
    partial void OnUpdateradDatumChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateradDatumChanged();
    partial void OnUpdateradAvChanging(string value);
    partial void OnUpdateradAvChanged();
    #endregion
	
	public Person()
	{
		this._Person_Sjuk_Hälsovårds_Personals = new EntitySet<Person_Sjuk_Hälsovårds_Personal>(new Action<Person_Sjuk_Hälsovårds_Personal>(this.attach_Person_Sjuk_Hälsovårds_Personals), new Action<Person_Sjuk_Hälsovårds_Personal>(this.detach_Person_Sjuk_Hälsovårds_Personals));
		this._Person_Adresses = new EntitySet<Person_Adress>(new Action<Person_Adress>(this.attach_Person_Adresses), new Action<Person_Adress>(this.detach_Person_Adresses));
		this._Person_AnnanPersons = new EntitySet<Person_AnnanPerson>(new Action<Person_AnnanPerson>(this.attach_Person_AnnanPersons), new Action<Person_AnnanPerson>(this.detach_Person_AnnanPersons));
		this._Person_Anställds = new EntitySet<Person_Anställd>(new Action<Person_Anställd>(this.attach_Person_Anställds), new Action<Person_Anställd>(this.detach_Person_Anställds));
		this._Person_Konsults = new EntitySet<Person_Konsult>(new Action<Person_Konsult>(this.attach_Person_Konsults), new Action<Person_Konsult>(this.detach_Person_Konsults));
		this._Person_Patients = new EntitySet<Person_Patient>(new Action<Person_Patient>(this.attach_Person_Patients), new Action<Person_Patient>(this.detach_Person_Patients));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FörNamn", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
	public string FörNamn
	{
		get
		{
			return this._FörNamn;
		}
		set
		{
			if ((this._FörNamn != value))
			{
				this.OnFörNamnChanging(value);
				this.SendPropertyChanging();
				this._FörNamn = value;
				this.SendPropertyChanged("FörNamn");
				this.OnFörNamnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MellanNamn", DbType="NVarChar(255)")]
	public string MellanNamn
	{
		get
		{
			return this._MellanNamn;
		}
		set
		{
			if ((this._MellanNamn != value))
			{
				this.OnMellanNamnChanging(value);
				this.SendPropertyChanging();
				this._MellanNamn = value;
				this.SendPropertyChanged("MellanNamn");
				this.OnMellanNamnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Efternamn", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
	public string Efternamn
	{
		get
		{
			return this._Efternamn;
		}
		set
		{
			if ((this._Efternamn != value))
			{
				this.OnEfternamnChanging(value);
				this.SendPropertyChanging();
				this._Efternamn = value;
				this.SendPropertyChanged("Efternamn");
				this.OnEfternamnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonNummer", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
	public string PersonNummer
	{
		get
		{
			return this._PersonNummer;
		}
		set
		{
			if ((this._PersonNummer != value))
			{
				this.OnPersonNummerChanging(value);
				this.SendPropertyChanging();
				this._PersonNummer = value;
				this.SendPropertyChanged("PersonNummer");
				this.OnPersonNummerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkapadDatum", DbType="DateTime NOT NULL")]
	public System.DateTime SkapadDatum
	{
		get
		{
			return this._SkapadDatum;
		}
		set
		{
			if ((this._SkapadDatum != value))
			{
				this.OnSkapadDatumChanging(value);
				this.SendPropertyChanging();
				this._SkapadDatum = value;
				this.SendPropertyChanged("SkapadDatum");
				this.OnSkapadDatumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateradDatum", DbType="DateTime")]
	public System.Nullable<System.DateTime> UpdateradDatum
	{
		get
		{
			return this._UpdateradDatum;
		}
		set
		{
			if ((this._UpdateradDatum != value))
			{
				this.OnUpdateradDatumChanging(value);
				this.SendPropertyChanging();
				this._UpdateradDatum = value;
				this.SendPropertyChanged("UpdateradDatum");
				this.OnUpdateradDatumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateradAv", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string UpdateradAv
	{
		get
		{
			return this._UpdateradAv;
		}
		set
		{
			if ((this._UpdateradAv != value))
			{
				this.OnUpdateradAvChanging(value);
				this.SendPropertyChanging();
				this._UpdateradAv = value;
				this.SendPropertyChanged("UpdateradAv");
				this.OnUpdateradAvChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person_Sjuk_Hälsovårds_Personal", Storage="_Person_Sjuk_Hälsovårds_Personals", ThisKey="Id", OtherKey="Person_FKID")]
	public EntitySet<Person_Sjuk_Hälsovårds_Personal> Person_Sjuk_Hälsovårds_Personals
	{
		get
		{
			return this._Person_Sjuk_Hälsovårds_Personals;
		}
		set
		{
			this._Person_Sjuk_Hälsovårds_Personals.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person_Adress", Storage="_Person_Adresses", ThisKey="Id", OtherKey="Person_FKID")]
	public EntitySet<Person_Adress> Person_Adresses
	{
		get
		{
			return this._Person_Adresses;
		}
		set
		{
			this._Person_Adresses.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person_AnnanPerson", Storage="_Person_AnnanPersons", ThisKey="Id", OtherKey="Person_FKID")]
	public EntitySet<Person_AnnanPerson> Person_AnnanPersons
	{
		get
		{
			return this._Person_AnnanPersons;
		}
		set
		{
			this._Person_AnnanPersons.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person_Anställd", Storage="_Person_Anställds", ThisKey="Id", OtherKey="Person_FKID")]
	public EntitySet<Person_Anställd> Person_Anställds
	{
		get
		{
			return this._Person_Anställds;
		}
		set
		{
			this._Person_Anställds.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person_Konsult", Storage="_Person_Konsults", ThisKey="Id", OtherKey="Person_FKID")]
	public EntitySet<Person_Konsult> Person_Konsults
	{
		get
		{
			return this._Person_Konsults;
		}
		set
		{
			this._Person_Konsults.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person_Patient", Storage="_Person_Patients", ThisKey="Id", OtherKey="Person_FKID")]
	public EntitySet<Person_Patient> Person_Patients
	{
		get
		{
			return this._Person_Patients;
		}
		set
		{
			this._Person_Patients.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Person_Sjuk_Hälsovårds_Personals(Person_Sjuk_Hälsovårds_Personal entity)
	{
		this.SendPropertyChanging();
		entity.Person = this;
	}
	
	private void detach_Person_Sjuk_Hälsovårds_Personals(Person_Sjuk_Hälsovårds_Personal entity)
	{
		this.SendPropertyChanging();
		entity.Person = null;
	}
	
	private void attach_Person_Adresses(Person_Adress entity)
	{
		this.SendPropertyChanging();
		entity.Person = this;
	}
	
	private void detach_Person_Adresses(Person_Adress entity)
	{
		this.SendPropertyChanging();
		entity.Person = null;
	}
	
	private void attach_Person_AnnanPersons(Person_AnnanPerson entity)
	{
		this.SendPropertyChanging();
		entity.Person = this;
	}
	
	private void detach_Person_AnnanPersons(Person_AnnanPerson entity)
	{
		this.SendPropertyChanging();
		entity.Person = null;
	}
	
	private void attach_Person_Anställds(Person_Anställd entity)
	{
		this.SendPropertyChanging();
		entity.Person = this;
	}
	
	private void detach_Person_Anställds(Person_Anställd entity)
	{
		this.SendPropertyChanging();
		entity.Person = null;
	}
	
	private void attach_Person_Konsults(Person_Konsult entity)
	{
		this.SendPropertyChanging();
		entity.Person = this;
	}
	
	private void detach_Person_Konsults(Person_Konsult entity)
	{
		this.SendPropertyChanging();
		entity.Person = null;
	}
	
	private void attach_Person_Patients(Person_Patient entity)
	{
		this.SendPropertyChanging();
		entity.Person = this;
	}
	
	private void detach_Person_Patients(Person_Patient entity)
	{
		this.SendPropertyChanging();
		entity.Person = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="Person.Person_AnnanPerson")]
public partial class Person_AnnanPerson : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _Person_FKID;
	
	private int _AnnanPerson_FKID;
	
	private string _UpdateradAv;
	
	private System.DateTime _SkapadDatum;
	
	private System.Nullable<System.DateTime> _UpdateradDatum;
	
	private EntityRef<Person> _Person;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPerson_FKIDChanging(int value);
    partial void OnPerson_FKIDChanged();
    partial void OnAnnanPerson_FKIDChanging(int value);
    partial void OnAnnanPerson_FKIDChanged();
    partial void OnUpdateradAvChanging(string value);
    partial void OnUpdateradAvChanged();
    partial void OnSkapadDatumChanging(System.DateTime value);
    partial void OnSkapadDatumChanged();
    partial void OnUpdateradDatumChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateradDatumChanged();
    #endregion
	
	public Person_AnnanPerson()
	{
		this._Person = default(EntityRef<Person>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Person_FKID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Person_FKID
	{
		get
		{
			return this._Person_FKID;
		}
		set
		{
			if ((this._Person_FKID != value))
			{
				if (this._Person.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPerson_FKIDChanging(value);
				this.SendPropertyChanging();
				this._Person_FKID = value;
				this.SendPropertyChanged("Person_FKID");
				this.OnPerson_FKIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnanPerson_FKID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int AnnanPerson_FKID
	{
		get
		{
			return this._AnnanPerson_FKID;
		}
		set
		{
			if ((this._AnnanPerson_FKID != value))
			{
				this.OnAnnanPerson_FKIDChanging(value);
				this.SendPropertyChanging();
				this._AnnanPerson_FKID = value;
				this.SendPropertyChanged("AnnanPerson_FKID");
				this.OnAnnanPerson_FKIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateradAv", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string UpdateradAv
	{
		get
		{
			return this._UpdateradAv;
		}
		set
		{
			if ((this._UpdateradAv != value))
			{
				this.OnUpdateradAvChanging(value);
				this.SendPropertyChanging();
				this._UpdateradAv = value;
				this.SendPropertyChanged("UpdateradAv");
				this.OnUpdateradAvChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkapadDatum", DbType="DateTime NOT NULL")]
	public System.DateTime SkapadDatum
	{
		get
		{
			return this._SkapadDatum;
		}
		set
		{
			if ((this._SkapadDatum != value))
			{
				this.OnSkapadDatumChanging(value);
				this.SendPropertyChanging();
				this._SkapadDatum = value;
				this.SendPropertyChanged("SkapadDatum");
				this.OnSkapadDatumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateradDatum", DbType="DateTime")]
	public System.Nullable<System.DateTime> UpdateradDatum
	{
		get
		{
			return this._UpdateradDatum;
		}
		set
		{
			if ((this._UpdateradDatum != value))
			{
				this.OnUpdateradDatumChanging(value);
				this.SendPropertyChanging();
				this._UpdateradDatum = value;
				this.SendPropertyChanged("UpdateradDatum");
				this.OnUpdateradDatumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person_AnnanPerson", Storage="_Person", ThisKey="Person_FKID", OtherKey="Id", IsForeignKey=true)]
	public Person Person
	{
		get
		{
			return this._Person.Entity;
		}
		set
		{
			Person previousValue = this._Person.Entity;
			if (((previousValue != value) 
						|| (this._Person.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Person.Entity = null;
					previousValue.Person_AnnanPersons.Remove(this);
				}
				this._Person.Entity = value;
				if ((value != null))
				{
					value.Person_AnnanPersons.Add(this);
					this._Person_FKID = value.Id;
				}
				else
				{
					this._Person_FKID = default(int);
				}
				this.SendPropertyChanged("Person");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="Person.Person_Anställd")]
public partial class Person_Anställd : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _Person_FKID;
	
	private int _Anställd_FKID;
	
	private string _UpdateradAv;
	
	private System.DateTime _SkapadDatum;
	
	private System.Nullable<System.DateTime> _UpdateradDatum;
	
	private EntityRef<Person> _Person;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPerson_FKIDChanging(int value);
    partial void OnPerson_FKIDChanged();
    partial void OnAnställd_FKIDChanging(int value);
    partial void OnAnställd_FKIDChanged();
    partial void OnUpdateradAvChanging(string value);
    partial void OnUpdateradAvChanged();
    partial void OnSkapadDatumChanging(System.DateTime value);
    partial void OnSkapadDatumChanged();
    partial void OnUpdateradDatumChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateradDatumChanged();
    #endregion
	
	public Person_Anställd()
	{
		this._Person = default(EntityRef<Person>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Person_FKID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Person_FKID
	{
		get
		{
			return this._Person_FKID;
		}
		set
		{
			if ((this._Person_FKID != value))
			{
				if (this._Person.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPerson_FKIDChanging(value);
				this.SendPropertyChanging();
				this._Person_FKID = value;
				this.SendPropertyChanged("Person_FKID");
				this.OnPerson_FKIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anställd_FKID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Anställd_FKID
	{
		get
		{
			return this._Anställd_FKID;
		}
		set
		{
			if ((this._Anställd_FKID != value))
			{
				this.OnAnställd_FKIDChanging(value);
				this.SendPropertyChanging();
				this._Anställd_FKID = value;
				this.SendPropertyChanged("Anställd_FKID");
				this.OnAnställd_FKIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateradAv", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string UpdateradAv
	{
		get
		{
			return this._UpdateradAv;
		}
		set
		{
			if ((this._UpdateradAv != value))
			{
				this.OnUpdateradAvChanging(value);
				this.SendPropertyChanging();
				this._UpdateradAv = value;
				this.SendPropertyChanged("UpdateradAv");
				this.OnUpdateradAvChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkapadDatum", DbType="DateTime NOT NULL")]
	public System.DateTime SkapadDatum
	{
		get
		{
			return this._SkapadDatum;
		}
		set
		{
			if ((this._SkapadDatum != value))
			{
				this.OnSkapadDatumChanging(value);
				this.SendPropertyChanging();
				this._SkapadDatum = value;
				this.SendPropertyChanged("SkapadDatum");
				this.OnSkapadDatumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateradDatum", DbType="DateTime")]
	public System.Nullable<System.DateTime> UpdateradDatum
	{
		get
		{
			return this._UpdateradDatum;
		}
		set
		{
			if ((this._UpdateradDatum != value))
			{
				this.OnUpdateradDatumChanging(value);
				this.SendPropertyChanging();
				this._UpdateradDatum = value;
				this.SendPropertyChanged("UpdateradDatum");
				this.OnUpdateradDatumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person_Anställd", Storage="_Person", ThisKey="Person_FKID", OtherKey="Id", IsForeignKey=true)]
	public Person Person
	{
		get
		{
			return this._Person.Entity;
		}
		set
		{
			Person previousValue = this._Person.Entity;
			if (((previousValue != value) 
						|| (this._Person.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Person.Entity = null;
					previousValue.Person_Anställds.Remove(this);
				}
				this._Person.Entity = value;
				if ((value != null))
				{
					value.Person_Anställds.Add(this);
					this._Person_FKID = value.Id;
				}
				else
				{
					this._Person_FKID = default(int);
				}
				this.SendPropertyChanged("Person");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="Person.Person_Konsult")]
public partial class Person_Konsult : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _Person_FKID;
	
	private int _Konsult_FKID;
	
	private string _UpdateradAv;
	
	private System.DateTime _SkapadDatum;
	
	private System.Nullable<System.DateTime> _UpdateradDatum;
	
	private EntityRef<Person> _Person;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPerson_FKIDChanging(int value);
    partial void OnPerson_FKIDChanged();
    partial void OnKonsult_FKIDChanging(int value);
    partial void OnKonsult_FKIDChanged();
    partial void OnUpdateradAvChanging(string value);
    partial void OnUpdateradAvChanged();
    partial void OnSkapadDatumChanging(System.DateTime value);
    partial void OnSkapadDatumChanged();
    partial void OnUpdateradDatumChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateradDatumChanged();
    #endregion
	
	public Person_Konsult()
	{
		this._Person = default(EntityRef<Person>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Person_FKID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Person_FKID
	{
		get
		{
			return this._Person_FKID;
		}
		set
		{
			if ((this._Person_FKID != value))
			{
				if (this._Person.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPerson_FKIDChanging(value);
				this.SendPropertyChanging();
				this._Person_FKID = value;
				this.SendPropertyChanged("Person_FKID");
				this.OnPerson_FKIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Konsult_FKID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Konsult_FKID
	{
		get
		{
			return this._Konsult_FKID;
		}
		set
		{
			if ((this._Konsult_FKID != value))
			{
				this.OnKonsult_FKIDChanging(value);
				this.SendPropertyChanging();
				this._Konsult_FKID = value;
				this.SendPropertyChanged("Konsult_FKID");
				this.OnKonsult_FKIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateradAv", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string UpdateradAv
	{
		get
		{
			return this._UpdateradAv;
		}
		set
		{
			if ((this._UpdateradAv != value))
			{
				this.OnUpdateradAvChanging(value);
				this.SendPropertyChanging();
				this._UpdateradAv = value;
				this.SendPropertyChanged("UpdateradAv");
				this.OnUpdateradAvChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkapadDatum", DbType="DateTime NOT NULL")]
	public System.DateTime SkapadDatum
	{
		get
		{
			return this._SkapadDatum;
		}
		set
		{
			if ((this._SkapadDatum != value))
			{
				this.OnSkapadDatumChanging(value);
				this.SendPropertyChanging();
				this._SkapadDatum = value;
				this.SendPropertyChanged("SkapadDatum");
				this.OnSkapadDatumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateradDatum", DbType="DateTime")]
	public System.Nullable<System.DateTime> UpdateradDatum
	{
		get
		{
			return this._UpdateradDatum;
		}
		set
		{
			if ((this._UpdateradDatum != value))
			{
				this.OnUpdateradDatumChanging(value);
				this.SendPropertyChanging();
				this._UpdateradDatum = value;
				this.SendPropertyChanged("UpdateradDatum");
				this.OnUpdateradDatumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person_Konsult", Storage="_Person", ThisKey="Person_FKID", OtherKey="Id", IsForeignKey=true)]
	public Person Person
	{
		get
		{
			return this._Person.Entity;
		}
		set
		{
			Person previousValue = this._Person.Entity;
			if (((previousValue != value) 
						|| (this._Person.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Person.Entity = null;
					previousValue.Person_Konsults.Remove(this);
				}
				this._Person.Entity = value;
				if ((value != null))
				{
					value.Person_Konsults.Add(this);
					this._Person_FKID = value.Id;
				}
				else
				{
					this._Person_FKID = default(int);
				}
				this.SendPropertyChanged("Person");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="Person.Person_Patient")]
public partial class Person_Patient : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _Person_FKID;
	
	private int _Patient_FKID;
	
	private string _UpdateradAv;
	
	private System.DateTime _SkapadDatum;
	
	private System.Nullable<System.DateTime> _UpdateradDatum;
	
	private EntityRef<Person> _Person;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPerson_FKIDChanging(int value);
    partial void OnPerson_FKIDChanged();
    partial void OnPatient_FKIDChanging(int value);
    partial void OnPatient_FKIDChanged();
    partial void OnUpdateradAvChanging(string value);
    partial void OnUpdateradAvChanged();
    partial void OnSkapadDatumChanging(System.DateTime value);
    partial void OnSkapadDatumChanged();
    partial void OnUpdateradDatumChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateradDatumChanged();
    #endregion
	
	public Person_Patient()
	{
		this._Person = default(EntityRef<Person>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Person_FKID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Person_FKID
	{
		get
		{
			return this._Person_FKID;
		}
		set
		{
			if ((this._Person_FKID != value))
			{
				if (this._Person.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPerson_FKIDChanging(value);
				this.SendPropertyChanging();
				this._Person_FKID = value;
				this.SendPropertyChanged("Person_FKID");
				this.OnPerson_FKIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Patient_FKID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Patient_FKID
	{
		get
		{
			return this._Patient_FKID;
		}
		set
		{
			if ((this._Patient_FKID != value))
			{
				this.OnPatient_FKIDChanging(value);
				this.SendPropertyChanging();
				this._Patient_FKID = value;
				this.SendPropertyChanged("Patient_FKID");
				this.OnPatient_FKIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateradAv", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string UpdateradAv
	{
		get
		{
			return this._UpdateradAv;
		}
		set
		{
			if ((this._UpdateradAv != value))
			{
				this.OnUpdateradAvChanging(value);
				this.SendPropertyChanging();
				this._UpdateradAv = value;
				this.SendPropertyChanged("UpdateradAv");
				this.OnUpdateradAvChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkapadDatum", DbType="DateTime NOT NULL")]
	public System.DateTime SkapadDatum
	{
		get
		{
			return this._SkapadDatum;
		}
		set
		{
			if ((this._SkapadDatum != value))
			{
				this.OnSkapadDatumChanging(value);
				this.SendPropertyChanging();
				this._SkapadDatum = value;
				this.SendPropertyChanged("SkapadDatum");
				this.OnSkapadDatumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateradDatum", DbType="DateTime")]
	public System.Nullable<System.DateTime> UpdateradDatum
	{
		get
		{
			return this._UpdateradDatum;
		}
		set
		{
			if ((this._UpdateradDatum != value))
			{
				this.OnUpdateradDatumChanging(value);
				this.SendPropertyChanging();
				this._UpdateradDatum = value;
				this.SendPropertyChanged("UpdateradDatum");
				this.OnUpdateradDatumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person_Patient", Storage="_Person", ThisKey="Person_FKID", OtherKey="Id", IsForeignKey=true)]
	public Person Person
	{
		get
		{
			return this._Person.Entity;
		}
		set
		{
			Person previousValue = this._Person.Entity;
			if (((previousValue != value) 
						|| (this._Person.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Person.Entity = null;
					previousValue.Person_Patients.Remove(this);
				}
				this._Person.Entity = value;
				if ((value != null))
				{
					value.Person_Patients.Add(this);
					this._Person_FKID = value.Id;
				}
				else
				{
					this._Person_FKID = default(int);
				}
				this.SendPropertyChanged("Person");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
